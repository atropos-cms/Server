(window.webpackJsonp=window.webpackJsonp||[]).push([[20,17],{425:function(e,n,t){"use strict";var r=t(2);n.a=r.a.extend({props:{value:{type:Object,required:!0,default:function(){return{}}},loading:{type:Boolean,required:!1,default:!1},isEdit:{type:Boolean,required:!1,default:!1}},computed:{model:{get:function(){return this.value},set:function(e){this.$emit("input",e)}}}})},446:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"deleteGroup"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteGroup"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:70}};t.loc.source={body:"mutation deleteGroup($id: ID!) {\n  deleteGroup(id: $id) {\n    id\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var r=n.type;"NamedType"===r.kind&&t.add(r.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.deleteGroup=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,c=new Set;for(d.forEach((function(e){c.add(e)}));c.size>0;){var m=c;c=new Set,m.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){c.add(e)})))}))}return l.forEach((function(n){var r=o(e,n);r&&t.definitions.push(r)})),t}(t,"deleteGroup")},489:function(e,n,t){"use strict";t.r(n);var r=t(47),o=t(425),d=Object(r.a)(o.a).extend({}),l=t(22),c=t(26),m=t.n(c),f=t(415),v=t(416),k=t(418),h=t(445),component=Object(l.a)(d,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-container",[t("v-row",[t("v-col",{attrs:{cols:"12"}},[t("v-text-field",{attrs:{"error-messages":e.$v("name","group.name"),label:e.$t("group.name"),autofocus:""},model:{value:e.model.name,callback:function(n){e.$set(e.model,"name",n)},expression:"model.name"}})],1)],1)],1)}),[],!1,null,null,null);n.default=component.exports;m()(component,{VCol:f.a,VContainer:v.a,VRow:k.a,VTextField:h.a})},506:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Groups"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"page"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"search"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"orderBy"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"GroupsOrderByOrderByClause"}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"groups"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"page"},value:{kind:"Variable",name:{kind:"Name",value:"page"}}},{kind:"Argument",name:{kind:"Name",value:"search"},value:{kind:"Variable",name:{kind:"Name",value:"search"}}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"Variable",name:{kind:"Name",value:"orderBy"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"paginatorInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"data"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:302}};t.loc.source={body:"query Groups($first: Int!, $page: Int, $search: String, $orderBy: [GroupsOrderByOrderByClause!]) {\n  groups(first: $first, page: $page, search: $search, orderBy: $orderBy) {\n    paginatorInfo {\n      count\n      currentPage\n      total\n    }\n    data {\n      id\n      name\n      description\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var r=n.type;"NamedType"===r.kind&&t.add(r.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.Groups=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,c=new Set;for(d.forEach((function(e){c.add(e)}));c.size>0;){var m=c;c=new Set,m.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){c.add(e)})))}))}return l.forEach((function(n){var r=o(e,n);r&&t.definitions.push(r)})),t}(t,"Groups")},507:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"createGroup"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"data"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateOrCreateGroupInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createGroup"},arguments:[{kind:"Argument",name:{kind:"Name",value:"data"},value:{kind:"Variable",name:{kind:"Name",value:"data"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:123}};t.loc.source={body:"mutation createGroup($data: UpdateOrCreateGroupInput!) {\n  createGroup(data: $data) {\n    id\n    name\n    description\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var r=n.type;"NamedType"===r.kind&&t.add(r.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.createGroup=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,c=new Set;for(d.forEach((function(e){c.add(e)}));c.size>0;){var m=c;c=new Set,m.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){c.add(e)})))}))}return l.forEach((function(n){var r=o(e,n);r&&t.definitions.push(r)})),t}(t,"createGroup")},560:function(e,n,t){"use strict";t.r(n);t(55);var r=t(20),o=(t(258),t(2)),d=t(489),l=t(85),c=t(506),m=t.n(c),f=t(507),v=t.n(f),k=t(446),h=t.n(k),N=t(116),y=o.a.extend({data:function(){return{headers:[{text:l.b.t("group.name"),value:"name"},{text:l.b.t("general.actions"),value:"action",align:"right",sortable:!1}],options:{page:1,itemsPerPage:10,sortBy:["name"],sortDesc:[!1]},search:"",groups:{paginatorInfo:{total:0},data:[]}}},apollo:{groups:{query:m.a,variables:function(){var e=this;return{first:this.options.itemsPerPage,orderBy:this.options.sortBy.map((function(n,t){return{field:n,order:e.options.sortDesc[t]?"DESC":"ASC"}})),search:this.search||void 0,page:this.options.page}}}},methods:{addGroup:function(){var e=this;return Object(r.a)(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e.$dialog({title:e.$t("messages.createGroupTitle"),component:d.default,preset:N.a.Create,action:function(n){return e.$apollo.mutate({mutation:v.a,variables:{data:n}}).then((function(){e.$apollo.queries.groups.refetch()}))}});case 2:case"end":return n.stop()}}),n)})))()},editGroup:function(e){this.$router.push("/groups/".concat(e.id))},deleteGroup:function(e){var n=this;return Object(r.a)(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n.$confirm({title:n.$t("messages.deleteGroupTitle"),message:n.$t("messages.deleteGroupMessage",e),preset:N.a.Delete,action:function(){return n.$apollo.mutate({mutation:h.a,variables:{id:e.id}}).then((function(){n.$apollo.queries.groups.refetch()}))}});case 2:case"end":return t.stop()}}),t)})))()}}}),S=t(22),w=t(26),G=t.n(w),D=t(198),V=t(177),$=t(49),E=t(557),x=t(179),O=t(445),component=Object(S.a)(y,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-card",[t("v-card-title",[t("v-btn",{attrs:{text:"",small:"",color:"primary"},on:{click:e.addGroup}},[e._v("\n      "+e._s(e.$t("applications.groups.addNewGroup"))+"\n    ")]),e._v(" "),t("div",{staticClass:"flex-grow-1"}),e._v(" "),t("v-text-field",{attrs:{"append-icon":"search",label:e.$t("general.search"),"single-line":"","hide-details":""},model:{value:e.search,callback:function(n){e.search=n},expression:"search"}})],1),e._v(" "),t("v-data-table",{attrs:{headers:e.headers,items:e.groups.data,"footer-props":{itemsPerPageOptions:[10,50,100]},options:e.options,"server-items-length":e.groups.paginatorInfo.total,loading:e.$apollo.queries.groups.loading,"item-key":"id"},on:{"update:options":function(n){e.options=n}},scopedSlots:e._u([{key:"item.action",fn:function(n){var r=n.item;return[t("v-icon",{staticClass:"mr-2",on:{click:function(n){return e.editGroup(r)}}},[e._v("\n        edit\n      ")]),e._v(" "),t("v-icon",{on:{click:function(n){return e.deleteGroup(r)}}},[e._v("\n        delete\n      ")])]}}])})],1)}),[],!1,null,null,null);n.default=component.exports;G()(component,{VBtn:D.a,VCard:V.a,VCardTitle:$.c,VDataTable:E.a,VIcon:x.a,VTextField:O.a})}}]);
type Post {
    id: ID!
    title: String!
    content: String!
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime!  @rename(attribute: "updated_at")
    deletedAt: DateTime  @rename(attribute: "deleted_at")
    author: User! @belongsTo
}

input CreatePostInput {
    title: String @rules(apply: ["string"])
    content: String @rules(apply: ["string"])
    author: CreateAuthorRelation
}

input UpdatePostInput {
    title: String @rules(apply: ["string"])
    content: String @rules(apply: ["string"])
}

extend type Query @middleware(checks: ["auth:airlock"]) {
    post(id: Int! @eq): Post @find
    posts: [Post!]! @paginate @softDeletes
}

extend type Mutation @middleware(checks: ["auth:airlock"]) {
    createPost(data: CreatePostInput! @spread): Post @create
    updatePost(id: ID!, data: UpdatePostInput! @spread): Post @update
    deletePost(id: ID!): Post @delete
    restorePost(id: ID!): Post @restore
}

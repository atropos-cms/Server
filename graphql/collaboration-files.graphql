type Workspace @modelClass(class: "\\App\\Models\\Collaboration\\Files\\Workspace") {
    id: ID!
    name: String

    roles: [Role!]!  @morphMany(relation: "roles")
    rolesCount: Int! @rename(attribute: "roles_count")
}

input CreateWorkspaceInput {
    name: String! @rules(apply: ["string"])
}

input UpdateWorkspaceInput {
    name: String! @rules(apply: ["string"])
}

enum WorkspaceColumn {
    name @enum(value: "name")
    createdAt @enum(value: "created_at")
    updatedAt @enum(value: "updated_at")
    deletedAt @enum(value: "deleted_at")
}

extend type Query @middleware(checks: ["auth:sanctum"]) {
    workspace(id: ID! @eq): Workspace @find
    workspaces(search: String @search, orderBy: _ @orderBy(columnsEnum: "WorkspaceColumn")): [Workspace!]! @all @softDeletes
}

extend type Mutation @middleware(checks: ["auth:sanctum"]) {
    createWorkspace(data: CreateWorkspaceInput! @spread): Workspace @create
    updateWorkspace(id: ID!, data: UpdateWorkspaceInput! @spread): Workspace @update
    deleteWorkspace(id: ID!): Workspace @delete
    forceDeleteWorkspace(id: ID!): Workspace @forceDelete
    restoreWorkspace(id: ID!): Workspace @restore

    syncWorkspaceRoles(id: ID!, roles: [ID!]!): Workspace @can(ability: "update", find: "id")
    addRoleToWorkspace(id: ID!, roles: [ID!]!): Workspace @can(ability: "update", find: "id")
    removeRoleFromWorkspace(id: ID!, roles: [ID!]!): Workspace @can(ability: "update", find: "id")
}


type Folder @modelClass(class: "\\App\\Models\\Collaboration\\Folder") {
    id: ID!
    name: String
}

input CreateFolderInput {
    name: String! @rules(apply: ["string"])
}

input UpdateFolderInput {
    name: String! @rules(apply: ["string"])
}

extend type Query @middleware(checks: ["auth:sanctum"]) {
    folder(id: ID! @eq): Folder @find
    folders: [Folder!]! @all @softDeletes
}

extend type Mutation @middleware(checks: ["auth:sanctum"]) {
    createFolder(data: CreateFolderInput! @spread): Folder @create
    updateFolder(id: ID!, data: UpdateFolderInput! @spread): Folder @update
    deleteFolder(id: ID!): Folder @delete
    forceDeleteFolder(id: ID!): Folder @forceDelete
    restoreFolder(id: ID!): Folder @restore
}
